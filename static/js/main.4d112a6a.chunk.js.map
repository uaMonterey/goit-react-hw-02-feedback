{"version":3,"sources":["components/Section/Section.jsx","components/Options/Options.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["Section","title","children","Options","onChangeStats","ButtonGroup","color","aria-label","Button","name","onClick","e","currentTarget","Statistics","stats","good","neutral","bad","total","positiveFeedback","Notification","message","App","state","handleChangeStats","setState","prev","getTotal","getPositiveFeedback","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"6PAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,M,gBCcQC,EAhBC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,OACE,eAACC,EAAA,EAAD,CAAaC,MAAM,UAAUC,aAAW,gCAAxC,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,OAAOC,QAAS,SAAAC,GAAC,OAAIP,EAAcO,EAAEC,cAAcH,OAAhE,kBAGA,cAACD,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAS,SAAAC,GAAC,OAAIP,EAAcO,EAAEC,cAAcH,OAAnE,qBAGA,cAACD,EAAA,EAAD,CAAQC,KAAK,MAAMC,QAAS,SAAAC,GAAC,OAAIP,EAAcO,EAAEC,cAAcH,OAA/D,qBCKSI,EAhBI,SAAC,GAIb,IAAD,IAHJC,MAASC,EAGL,EAHKA,KAAMC,EAGX,EAHWA,QAASC,EAGpB,EAHoBA,IACxBC,EAEI,EAFJA,MACAC,EACI,EADJA,iBAEA,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,SCJdC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCMpCC,E,4MAaJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAAAf,GAClB,EAAKgB,UAAS,SAAAC,GAAI,sBACfjB,EAAOiB,EAAKjB,GAAQ,O,EAIzBkB,SAAW,WACT,MAA+B,EAAKJ,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,oBAAsB,WACpB,IAAQb,EAAS,EAAKQ,MAAdR,KACR,OAAOA,EAAOc,KAAKC,MAAOf,EAAO,EAAKY,WAAc,KAAO,IAAM,M,4CAGnE,WACE,OACE,gCACE,cAAC,EAAD,CAAS1B,MAAM,6BAAf,SACE,cAAC,EAAD,CAASG,cAAe2B,KAAKP,sBAE9BO,KAAKJ,WACJ,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACE,cAAC,EAAD,CACEa,MAAOiB,KAAKR,MACZL,MAAOa,KAAKJ,WACZR,iBAAkBY,KAAKH,0BAI3B,cAAC,EAAD,CAAcP,QAAQ,6B,GAlDdW,aAAZV,EACGW,aAAe,CACpBlB,KAAM,EACNC,QAAS,EACTC,IAAK,GAqDMK,Q,MC5DfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.4d112a6a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { ButtonGroup } from '@material-ui/core';\r\n\r\nconst Options = ({ onChangeStats }) => {\r\n  return (\r\n    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n      <Button name=\"good\" onClick={e => onChangeStats(e.currentTarget.name)}>\r\n        Good\r\n      </Button>\r\n      <Button name=\"neutral\" onClick={e => onChangeStats(e.currentTarget.name)}>\r\n        Neutral\r\n      </Button>\r\n      <Button name=\"bad\" onClick={e => onChangeStats(e.currentTarget.name)}>\r\n        Bad\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from 'react';\r\n\r\nconst Statistics = ({\r\n  stats: { good, neutral, bad },\r\n  total,\r\n  positiveFeedback,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positiveFeedback}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n//componets\nimport Section from './components/Section/Section';\nimport Options from './components/Options/Options';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  static propTypes = {\n    good: PropTypes.number,\n    neutral: PropTypes.number,\n    bad: PropTypes.number,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChangeStats = name => {\n    this.setState(prev => ({\n      [name]: prev[name] + 1,\n    }));\n  };\n\n  getTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  getPositiveFeedback = () => {\n    const { good } = this.state;\n    return good ? Math.round((good / this.getTotal()) * 100) + '%' : '0%';\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title=\"Please leave your feedback\">\n          <Options onChangeStats={this.handleChangeStats} />\n        </Section>\n        {this.getTotal() ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              stats={this.state}\n              total={this.getTotal()}\n              positiveFeedback={this.getPositiveFeedback()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}